name: Generate and Obfuscate Worker Script

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  build-and-obfuscate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Obfuscator
        run: npm install javascript-obfuscator

      - name: Obfuscate from local source file
        run: |
          cat > obfuscate.js << 'EOF'
          const JavaScriptObfuscator = require('javascript-obfuscator');
          const fs = require('fs');
          const path = require('path');
          
          const sourceFileName = '明文源吗';
          const outputFileName = '少年你相信光吗';
          const sourceFilePath = path.join(process.cwd(), sourceFileName);

          if (!fs.existsSync(sourceFilePath)) {
            console.error('错误：在路径 \'' + sourceFilePath + '\' 未找到源文件。请确保您的仓库根目录有名为 \'明文源吗\' 的文件。');
            process.exit(1);
          }

          const originalCode = fs.readFileSync(sourceFilePath, 'utf8');

          if (!originalCode || originalCode.trim().length === 0) {
            console.error('错误：源文件 ' + sourceFileName + ' 为空。');
            process.exit(1);
          }

          // --- 轻量级混淆配置：最小化性能影响 ---
          const obfuscationOptions = {
              compact: true,
              // 控制流扁平化：关闭或极低阈值以最大化性能
              controlFlowFlattening: false,  // 完全关闭控制流扁平化以提升性能
              controlFlowFlatteningThreshold: 0,
              deadCodeInjection: false,
              // 字符串数组：仅保留基础混淆，降低编码开销
              stringArray: true,
              stringArrayEncoding: [],  // 关闭编码，仅使用字符串数组存储
              stringArrayThreshold: 0.5,  // 降至0.5，50%的字符串保持原样
              stringArrayRotate: false,  // 关闭旋转以减少开销
              stringArrayShuffle: false,  // 关闭洗牌以减少开销
              stringArrayWrappersCount: 1,  // 降至1，最小包装层数
              stringArrayWrappersChainedCalls: false,  // 关闭链式调用
              stringArrayWrappersParametersMaxCount: 2,  // 降至2
              renameGlobals: true,
              identifierNamesGenerator: 'hexadecimal',  // 使用更快的十六进制生成器
              identifierNamesCache: null,
              identifiersPrefix: '',
              renameProperties: false,
              renamePropertiesMode: 'safe',
              ignoreImports: false,
              target: 'browser',
              numbersToExpressions: false,  // 关闭数字转表达式
              simplify: true,  // 启用简化以优化代码
              splitStrings: false,  // 关闭字符串分割以减少开销
              splitStringsChunkLength: 0,
              transformObjectKeys: false,  // 关闭对象键转换
              unicodeEscapeSequence: false,  // 关闭Unicode转义
              selfDefending: false,  // 关闭自我防护机制
              debugProtection: false,
              debugProtectionInterval: 0,
              disableConsoleOutput: true,
              domainLock: []
          };

          const obfuscatedCode = JavaScriptObfuscator.obfuscate(originalCode, obfuscationOptions).getObfuscatedCode();
          
          fs.writeFileSync(path.join(process.cwd(), outputFileName), obfuscatedCode, 'utf8');
          console.log('成功将 \'' + sourceFileName + '\' 混淆并保存至 \'' + outputFileName + '\'。');
          EOF
          node obfuscate.js

      - name: Commit and push the obfuscated file
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add '少年你相信光吗'
          if git diff --staged --quiet; then
            echo "No changes to commit, the obfuscated file is already up-to-date."
          else
            git commit -m "少年你相信光吗"
            git push
          fi
